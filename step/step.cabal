cabal-version: 3.0

name: step
version: 0

license: Apache-2.0
license-file: license.txt

extra-doc-files: graphics/**/*.svg

common base
    default-language: Haskell2010
    ghc-options: -Wall -fdefer-typed-holes -Wmissing-deriving-strategies

    -- Temporary for early stage development
    ghc-options: -fno-warn-unused-imports
    ghc-options: -fno-warn-missing-signatures

    default-extensions:
        BlockArguments
        DerivingStrategies
        LambdaCase
        NoMonomorphismRestriction
        NoImplicitPrelude
        NamedFieldPuns
        OverloadedLists
        RankNTypes
        ScopedTypeVariables
        TypeApplications
        TypeFamilies
    build-depends:
        base
      , bytestring
      , containers
      , data-default-class
      , hedgehog
      , ListLike ^>= 4.7
      , loc ^>= 0.1.4
      , mtl
      , transformers
      , nat-optics ^>= 1.0.0.4
      , optics ^>= 0.4
      , text
    mixins:
        base
          ( Data.Bool as Bool
          , Data.Char as Char
          , Data.Coerce as Coerce
          , Data.Either as Either
          , Data.Kind as Kind
          , Data.Word as Word
          , Text.Show as Show
          , Control.Monad as Monad
          , Prelude as BasePrelude
          , Data.Function as Function
          , Numeric.Natural as Natural
          , Control.Applicative as Applicative
          , Data.Functor.Contravariant as Contravariant
          , Data.Maybe as Maybe
          , Data.Foldable as Foldable
          , Data.String as String
          , Data.Functor as Functor
          , Data.Functor.Identity as Identity
          , Data.Semigroup as Semigroup
          , Data.Monoid as Monoid
          , Data.Void as Void
          , Data.List.NonEmpty as NonEmpty
          , GHC.Exts
          , GHC.Generics as Generic
          )
      , bytestring
          ( Data.ByteString as ByteString
          , Data.ByteString.Lazy as LByteString
          )
      , containers
          ( Data.Set as Set
          , Data.Sequence as Seq
          , Data.Map.Strict as Map
          , Data.IntMap.Strict as IntMap
          )
      , data-default-class (Data.Default.Class as Default)
      , ListLike (Data.ListLike as ListLike)
      , nat-optics
          ( NatOptics.Positive as Positive
          , NatOptics.Positive.Math as Positive.Math
          , NatOptics.Positive.Unsafe as Positive.Unsafe
          , NatOptics.Signed as Signed
          )
      , mtl
          ( Control.Monad.State as State
          )

      , transformers
          ( Control.Monad.Trans.Class as MonadTrans
          , Control.Monad.Trans.Reader as Reader
          , Control.Monad.Trans.Except as Except
          )
      , loc (Data.Loc as Loc, Data.Loc.SpanOrLoc as SpanOrLoc)
      , optics (Optics)
      , text (Data.Text as Text)

library
    import: base
    hs-source-dirs: library/step
    build-depends:
        step-internal
      , step-action-types
      , step-nontrivial
      , step-cursor
    mixins: step-internal (Step.Internal.Prelude)
    exposed-modules:
        Step.Actions

        Step.Failure

        Step.Configuration

        Step.Competitors.Attoparsec.Text

        Step.Buffer.Buffer
        Step.Buffer.BufferResult
        Step.Buffer.BufferState
        Step.Buffer.Counting
        Step.Buffer.DoubleBuffer
        Step.Buffer.DoubleBuffer.Constructor
        Step.Buffer.DoubleBuffer.Optics
        Step.Buffer.DoubleBuffer.Extra
        Step.Buffer.Loading

        Step.Input.BufferedStream
        Step.Input.Counter
        Step.Input.CursorPosition

        Step.Document
        Step.Document.Base
        Step.Document.Lines
        Step.Document.Locating
        Step.Document.Location
        Step.Document.Memory

        Step.While

    reexported-modules:
        Step.ActionTypes
      , Step.ActionTypes.Types
      , Step.ActionTypes.Unsafe
      , Step.Cursor
      , Step.Nontrivial
      , Step.Nontrivial.Unsafe

library step-cursor
    import: base
    hs-source-dirs: library/step-cursor
    build-depends: step-internal, step-nontrivial
    exposed-modules:
        Step.Cursor
    other-modules:
        Step.Cursor.AdvanceResult
        Step.Cursor.ChunkStream
        Step.Cursor.Class
        Step.Cursor.InputChunking
        Step.Cursor.Stream
        Step.Cursor.StreamCompletion
        Step.Cursor.Type

library step-nontrivial
    import: base
    hs-source-dirs: library/step-nontrivial
    build-depends: step-internal
    exposed-modules:
        Step.Nontrivial
        Step.Nontrivial.Constructor
        Step.Nontrivial.Drop
        Step.Nontrivial.Length
        Step.Nontrivial.Refinement
        Step.Nontrivial.Span
        Step.Nontrivial.SplitAt
        Step.Nontrivial.SplitAtPositive
        Step.Nontrivial.TakeWhile
        Step.Nontrivial.Type
        Step.Nontrivial.Unsafe

library step-action-types
    import: base
    hs-source-dirs: library/step-action-types
    build-depends: step-internal
    exposed-modules:
        Step.ActionTypes
        Step.ActionTypes.Do
        Step.ActionTypes.Types
        Step.ActionTypes.Unsafe
    other-modules:
        Step.ActionTypes.Atomic
        Step.ActionTypes.Returnable
        Step.ActionTypes.ChangeBase
        Step.ActionTypes.Coerce
        Step.ActionTypes.CoerceAny
        Step.ActionTypes.CoercedJoin
        Step.ActionTypes.Constructors
        Step.ActionTypes.Functorial
        Step.ActionTypes.Join
        Step.ActionTypes.KindJoin
        Step.ActionTypes.Loop
        Step.ActionTypes.Monadic
        Step.ActionTypes.Subtyping

library step-internal
    import: base
    hs-source-dirs: library/step-internal
    exposed-modules:
        Step.Internal.Prelude
    other-modules:
        Step.Internal.CombineState
        Step.Internal.Dependencies
        Step.Internal.Modify
        Step.Internal.Pair
        Step.Internal.Positive
        Step.Internal.Times
        Step.Internal.While

test-suite test-step
    import: base
    type: exitcode-stdio-1.0
    hs-source-dirs: test/test-step
    main-is: Main.hs
    build-depends: step, step-internal, step-action-types, hspec, hspec-hedgehog, text
    mixins:
        step-internal (Step.Internal.Prelude)
      , text (Data.Text as Text)
    other-modules:
        Step.Spec.DocumentParsing
        Step.Spec.LineHistory
